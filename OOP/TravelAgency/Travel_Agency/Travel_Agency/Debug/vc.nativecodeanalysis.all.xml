<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>ValueObject.h</FILENAME>
      <LINE>23</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>TouristOffer::{ctor}</FUNCTION>
    <DECORATED>??0TouristOffer@@QAE@XZ</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>ValueObject.h</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class TouristOffer', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>TouristOffer::{dtor}</FUNCTION>
    <DECORATED>??1TouristOffer@@QAE@XZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>ValueObject.h</FILENAME>
      <LINE>115</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DtoOffer::{ctor}</FUNCTION>
    <DECORATED>??0DtoOffer@@QAE@XZ</DECORATED>
    <FUNCLINE>115</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>Repository.h</FILENAME>
      <LINE>41</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class Repository', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>Repository::{dtor}</FUNCTION>
    <DECORATED>??1Repository@@UAE@XZ</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>Undo.h</FILENAME>
      <LINE>17</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class UndoAction', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>UndoAction::{dtor}</FUNCTION>
    <DECORATED>??1UndoAction@@UAE@XZ</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>Repository.cpp</FILENAME>
      <LINE>3</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26435</DEFECTCODE>
    <DESCRIPTION>Function 'MemoryRepository::addOffer' should specify exactly one of 'virtual', 'override', or 'final' (c.128).</DESCRIPTION>
    <FUNCTION>MemoryRepository::addOffer</FUNCTION>
    <DECORATED>?addOffer@MemoryRepository@@UAEXABVTouristOffer@@@Z</DECORATED>
    <FUNCLINE>3</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>Repository.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26435</DEFECTCODE>
    <DESCRIPTION>Function 'MemoryRepository::modifyOffer' should specify exactly one of 'virtual', 'override', or 'final' (c.128).</DESCRIPTION>
    <FUNCTION>MemoryRepository::modifyOffer</FUNCTION>
    <DECORATED>?modifyOffer@MemoryRepository@@UAE?BVTouristOffer@@ABV2@@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>Repository.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26435</DEFECTCODE>
    <DESCRIPTION>Function 'MemoryRepository::deleteOffer' should specify exactly one of 'virtual', 'override', or 'final' (c.128).</DESCRIPTION>
    <FUNCTION>MemoryRepository::deleteOffer</FUNCTION>
    <DECORATED>?deleteOffer@MemoryRepository@@UAEXABVTouristOffer@@@Z</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>125</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::at</FUNCTION>
    <DECORATED>?at@?$DynamicVector@H@@QBEAAHH@Z</DECORATED>
    <FUNCLINE>119</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>105</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::erase</FUNCTION>
    <DECORATED>?erase@?$DynamicVector@H@@QAEXH@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>80</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::push_back</FUNCTION>
    <DECORATED>?push_back@?$DynamicVector@H@@QAEXABH@Z</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>62</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::=</FUNCTION>
    <DECORATED>??4?$DynamicVector@H@@QAEABV0@ABV0@@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>62</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::=</FUNCTION>
    <DECORATED>??4?$DynamicVector@H@@QAEABV0@ABV0@@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>63</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::=</FUNCTION>
    <DECORATED>??4?$DynamicVector@H@@QAEABV0@ABV0@@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class DynamicVector&lt;int&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::=</FUNCTION>
    <DECORATED>??4?$DynamicVector@H@@QAEABV0@ABV0@@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>68</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::=</FUNCTION>
    <DECORATED>??4?$DynamicVector@H@@QAEABV0@ABV0@@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>41</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$DynamicVector@H@@QAE@XZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>41</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$DynamicVector@H@@QAE@XZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>35</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$DynamicVector@H@@QAE@XZ</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>35</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'operator new[]()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$DynamicVector@H@@QAE@XZ</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>149</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>IteratorVector&lt;int&gt;::element</FUNCTION>
    <DECORATED>?element@?$IteratorVector@H@@QBEAAHXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>146</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'IteratorVector&lt;int&gt;::IteratorVector&lt;int&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>IteratorVector&lt;int&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$IteratorVector@H@@QAE@ABV?$DynamicVector@H@@H@Z</DECORATED>
    <FUNCLINE>146</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>145</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'IteratorVector&lt;int&gt;::IteratorVector&lt;int&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>IteratorVector&lt;int&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$IteratorVector@H@@QAE@ABV?$DynamicVector@H@@@Z</DECORATED>
    <FUNCLINE>145</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>17</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::redim</FUNCTION>
    <DECORATED>?redim@?$DynamicVector@H@@AAEXXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>17</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::redim</FUNCTION>
    <DECORATED>?redim@?$DynamicVector@H@@AAEXXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>25</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26401</DEFECTCODE>
    <DESCRIPTION>Do not delete a raw pointer that is not an owner&lt;T&gt; (i.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::redim</FUNCTION>
    <DECORATED>?redim@?$DynamicVector@H@@AAEXXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>25</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::redim</FUNCTION>
    <DECORATED>?redim@?$DynamicVector@H@@AAEXXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\FacultyProjects\OOP\TravelAgency\Travel_Agency\Travel_Agency\</FILEPATH>
      <FILENAME>DynamicArray.h</FILENAME>
      <LINE>20</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DynamicVector&lt;int&gt;::redim</FUNCTION>
    <DECORATED>?redim@?$DynamicVector@H@@AAEXXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>